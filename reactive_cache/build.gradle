apply plugin: 'java'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'maven'

sourceCompatibility = 1.8
targetCompatibility = 1.8

buildscript {
  repositories {
    mavenCentral()
    jcenter()
  }

  dependencies {
    classpath "me.tatarka:gradle-retrolambda:3.2.5"
  }
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
  classifier = 'javadoc'
  from javadoc.destinationDir
}

artifacts {
  archives sourcesJar
  archives javadocJar
}

dependencies {
  compile "com.github.VictorAlbertos.RxCache:core:1.6.1"

  compile "io.reactivex:rxjava:1.1.8"

  compile 'com.github.VictorAlbertos.Jolyglot:api:0.0.3'

  testCompile 'com.github.VictorAlbertos.Jolyglot:gson:0.0.3'
  testCompile 'com.github.VictorAlbertos.Jolyglot:jackson:0.0.3'
  testCompile 'com.github.VictorAlbertos.Jolyglot:moshi:0.0.3'
  testCompile 'junit:junit:4.12'
}

String java8 = getJavaVersion(8)
String java7 = getJavaVersion(7)

retrolambda {
  jdk java8
  oldJdk java7
  javaVersion JavaVersion.VERSION_1_7
}

String getJavaVersion(Integer v) {
  def sout = new StringBuffer()
  def proc = "/usr/libexec/java_home -v 1.$v".execute()
  proc.consumeProcessOutput(sout, new StringBuffer())
  proc.waitForOrKill(1000)
  return sout.toString().replace("\n", "").replace("\r", "")
}